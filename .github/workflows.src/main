#!/usr/bin/env node

let _ = require('lodash-firecloud');
let ypVsn = require('../../yplatform/package.json').version;
// debug
// ypVsn = '0.3.12';

let {getArtifacts, artifactsStep} = require('../../yplatform/.github/workflows.src/common-step-artifacts');
// let {checkoutStep} = require('../../yplatform/.github/workflows.src/common-step-checkout');
let {ciShSteps, ciShStepsDeploy} = require('../../yplatform/.github/workflows.src/common-steps');
let {dockerBuildxSteps} = require('../../yplatform/.github/workflows.src/common-step-dockerbuildx');
let {env: commonEnv} = require('../../yplatform/.github/workflows.src/common-env');
let {matrixContainer} = require('../../yplatform/.github/workflows.src/common-matrix-container');

// -----------------------------------------------------------------------------

// FIXME Centos 8 is EOL 2021
delete matrixContainer.centos;

let actionStep = {
  uses: `ysoftwareab/yplatform@v${ypVsn}`,
  with: {
    run: _.join([
      'bin/github-fix',
      'bin/github-checkout'
    ], '\n')
  }
};

let env = {
  ...commonEnv,
  DOCKER_USERNAME: '${{ secrets.DOCKER_USERNAME }}',
  DOCKER_TOKEN: '${{ secrets.DOCKER_TOKEN }}',
  GITHUB_MATRIX_CONTAINER: '${{ matrix.container }}',
  GITHUB_MATRIX_YP_CI_BREW_INSTALL: '${{ matrix.yp_ci_brew_install }}',
  YP_SKIP_SUDO_BOOTSTRAP: '${{ matrix.yp_skip_sudo_bootstrap }}',
  YP_SKIP_BREW_BOOTSTRAP: '${{ matrix.yp_skip_brew_bootstrap }}'
};

let jobs = {};

let makeJobs = function(matrixContainer, nameSuffix) {
  matrixContainer = _.isArray(matrixContainer) ? matrixContainer : [
    matrixContainer
  ];

  let containerImageName = 'yp-${{ matrix.container }}-${{ matrix.yp_ci_brew_install }}';
  let name = _.join([
    containerImageName,
    'skipsudob${{ matrix.yp_skip_sudo_bootstrap }}',
    'skipbrewb${{ matrix.yp_skip_brew_bootstrap }}'
  ], '-');
  jobs[`mainc-${nameSuffix}`] = {
    'timeout-minutes': 30,
    strategy: {
      'fail-fast': false,
      matrix: {
        container: matrixContainer,
        yp_ci_brew_install: [
          'minimal',
          'common'
        ],
        yp_skip_sudo_bootstrap: [
          '',
          'true'
        ],
        yp_skip_brew_bootstrap: [
          '',
          'true'
        ]
      }
    },
    name,
    'runs-on': 'ubuntu-latest',
    container: {
      image: `ysoftwareab/${containerImageName}:${ypVsn}`,
      options: '--user yp:yp'
    },
    env: {
      ...env,
      GITHUB_JOB_NAME: name
    },
    steps: [
      actionStep,
      ...ciShSteps,
      ...ciShStepsDeploy,
      _.merge({}, artifactsStep, {
        with: {
          name,
          path: getArtifacts(`${__dirname}/../../.artifacts`)
        }
      })
    ]
  };
};

_.forEach(matrixContainer, makeJobs);

let workflow = {
  name: 'CI',
  on: {
    push: {
      branches: [
        'github*',
        'master'
      ]
    },
    schedule: [{
      cron: '0 0 * * *'
    }],
    // eslint-disable-next-line no-null/no-null
    workflow_dispatch: null
  },
  concurrency: {
    group: '${{ github.ref }}',
    'cancel-in-progress': true
  },
  jobs: {
    test: {
      'timeout-minutes': 30,
      name: 'test',
      'runs-on': 'ubuntu-latest',
      container: {
        image: `ysoftwareab/yp-ubuntu-20.04-minimal:latest`,
        options: '--user yp:yp'
      },
      steps: [{
        shell: 'bash',
        run: 'echo "HOME=/home/yp" | sudo tee -a $GITHUB_ENV'
      }, {
        shell: 'bash',
        run: 'echo $HOME; cd; pwd; ls -la'
      }, {
        shell: 'bash',
        run: 'echo foo > ~/foo'
      }, {
        shell: 'bash',
        run: 'echo $HOME; cd; pwd; ls -la'
      }]
    }
  }
};

// eslint-disable-next-line no-console, no-null/no-null
console.log(JSON.stringify(workflow, null, 2));
